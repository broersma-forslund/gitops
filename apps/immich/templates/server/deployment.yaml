kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ template "immich.fullname" . }}-server
  labels:
    app.kubernetes.io/name: {{ template "immich.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: "immich-server"
    {{- include "labels" . | nindent 4 }}
spec:
  revisionHistoryLimit: 0
  replicas: {{ .Values.server.replicas }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "immich.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: "immich-server"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "immich.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: "immich-server"
        {{- include "labels" . | nindent 8 }}
    spec:
      securityContext:
        fsGroup: 6000
      containers:
        - name: server
          image: "{{ .Values.server.image.registry }}/{{ .Values.server.image.repository }}:{{ .Values.server.image.tag }}"
          imagePullPolicy: {{ .Values.server.image.pullPolicy }}
          env:
            - name: IMMICH_PORT
              value: "3001"
            - name: IMMICH_METRICS
              value: "true"
            - name: IMMICH_METRICS_PORT
              value: "8081"
            - name: REDIS_HOSTNAME
              value: {{ .Release.Name }}-redis-master
            - name: DB_HOSTNAME
              valueFrom:
                secretKeyRef:
                  name: {{ template "immich.fullname" . }}-data-app
                  key: host
            - name: DB_DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: {{ template "immich.fullname" . }}-data-app
                  key: dbname
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ template "immich.fullname" . }}-data-app
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "immich.fullname" . }}-data-app
                  key: password
            - name: IMMICH_MACHINE_LEARNING_URL
              value: http://{{ template "immich.fullname" . }}-machine-learning:3003
          livenessProbe:
            initialDelaySeconds: 0
            timeoutSeconds: 1
            periodSeconds: 10
            failureThreshold: 3
            httpGet:
              port: http
              path: /api/server-info/ping
          readinessProbe:
            initialDelaySeconds: 0
            timeoutSeconds: 1
            periodSeconds: 10
            failureThreshold: 3
            httpGet:
              port: http
              path: /api/server-info/ping
          volumeMounts:
            - name: library
              mountPath: /usr/src/app/upload
          ports:
            - name: http
              containerPort: 3001
              protocol: TCP
            - name: metrics
              containerPort: 8081
              protocol: TCP
          resources: {{ toYaml .Values.server.resources | nindent 12 }}
      volumes:
        - name: library
          persistentVolumeClaim:
              claimName: {{ template "immich.fullname" . }}-library
