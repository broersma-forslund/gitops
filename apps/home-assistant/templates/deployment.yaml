apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "homeAssistant.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ template "homeAssistant.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: "home-assistant"
    {{- include "labels" . | nindent 4 }}
spec:
  revisionHistoryLimit: 0
  replicas: {{ .Values.replicas }}
  strategy: {{ toYaml .Values.deploymentStrategy | nindent 4 }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "homeAssistant.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: "home-assistant"
      {{- include "labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "homeAssistant.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: "home-assistant"
        {{- include "labels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ template "homeAssistant.fullname" . }}
      # hostNetwork: true
      # dnsPolicy: ClusterFirstWithHostNet
      securityContext: {{ toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: config-loader
          image: "{{ .Values.config.image.registry }}/{{ .Values.config.image.repository }}:{{ .Values.config.image.tag }}"
          restartPolicy: Always
          securityContext: {{ toYaml .Values.securityContext | nindent 12 }}
          env:
          - name: IGNORE_ALREADY_PROCESSED
            value: "true"
          - name: LABEL
            value: "home-assistant-config"
          - name: FOLDER_ANNOTATION
            value: "io.home-assistant/config-folder"
          - name: FOLDER
            value: /config
          - name: RESOURCE
            value: "both"
          volumeMounts:
            - name: config
              mountPath: /config
      containers:
        - name: home-assistant
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          env:
            - name: TZ
              value: "Europe/Amsterdam"
          ports:
            - name: http
              containerPort: 8123
              protocol: TCP
          resources: {{ toYaml .Values.resources | nindent 12 }}
          securityContext: {{ toYaml .Values.securityContext | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          volumeMounts:
            - mountPath: /config
              name: config
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: {{ template "homeAssistant.fullname" . }}
      tolerations:
      - key: essential
        operator: Exists