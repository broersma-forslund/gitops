apiVersion: apps.emqx.io/v2beta1
kind: EMQX
metadata:
  name: emqx
spec:
  image: '{{ .Values.cluster.image.repository }}:{{ .Values.cluster.image.tag }}'
  revisionHistoryLimit: 0 
  replicantTemplate:
    spec:
      replicas: 0

  config:
    data: |
      listeners.tcp.default {
        enable = false
      }
      listeners.ws.default {
        enable = false
      }
      listeners.ssl.default {
        ssl_options {
          certfile = "/mounted/cert/tls.crt"
          keyfile = "/mounted/cert/tls.key" 
        }
      }
      listeners.wss.default {
        ssl_options {
          certfile = "/mounted/cert/tls.crt"
          keyfile = "/mounted/cert/tls.key"
        }
        websocket {
          mqtt_path = "/"
        }
      }

      authentication = [{
        mechanism = "password_based"
        backend = "built_in_database"
      }]
      authorization {
        no_match = "deny"
        deny_action = "disconnect"

        sources = [{
          type = "built_in_database"
        }]
      }

      mqtt {
        ignore_loop_deliver = false
        retain_available = true
        wildcard_subscription = true
        use_username_as_clientid = true
      }
      retainer {
        enable = true
        backend {
          type = "built_in_database"
          storage_type = "disc"
        }
      }

  coreTemplate:
    spec:
      replicas: 2
      volumeClaimTemplates:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 100Mi
      extraVolumes:
        - name: emqx-tls
          secret:
            secretName: mqtt-tls-certificate
      extraVolumeMounts:
        - name: emqx-tls
          mountPath: /mounted/cert
      tolerations:
      - key: essential
        operator: Exists

  listenersServiceTemplate:
    metadata:
      annotations:
        'external-dns.alpha.kubernetes.io/hostname': mqtt.mobrockers.com
        'io.cilium/lb-ipam-ips': 10.0.10.2
    spec:
      type: LoadBalancer
      externalTrafficPolicy: Local
